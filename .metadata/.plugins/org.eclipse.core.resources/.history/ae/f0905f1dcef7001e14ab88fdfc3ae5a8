<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Insert title here</title>
<link rel="shortcut icon" type="image/x-icon" href="http://localhost/webPro/images/SiSt.ico">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<link rel="stylesheet" href="http://localhost/webPro/resources/cdn-main/example.css">
<script src="http://localhost/webPro/resources/cdn-main/example.js"></script>
<style>
 span.material-symbols-outlined{
   vertical-align: text-bottom;
 }
</style>
</head>
<body>
<header>
  <h1 class="main"><a href="#" style="position: absolute;top:30px;">yeon HOme</a></h1>
  <ul>
    <li><a href="#">로그인</a></li>
    <li><a href="#">회원가입</a></li>
  </ul>
</header>
<div>
  <xmp class="code">
   
  </xmp>
  <p id="demo"></p>
  
</div>

  <script>
    // js 배열 == 객체
    /* 
    const person = [];
    person[0] = "lee";
    person[1] = "changik";
    person[2] = 20;
    // alert( person.length ); // 3
    alert( person[1] ); // changik
     */ 
     
    // 선언 [] 배열 => 객체
    /*
    const person = [];
    //const person = {}; // js 객체를 선언할 때
    person["lastname"] = "lee";
    person["firstname"] = "changik";
    person["age"] = 20;
    
    // alert( person[0] ); undefined
    alert( person["lastname"] ); // lee
    // person.length == 0 ); // true
    alert( person );
    */
     
  </script>
  
  <script>
    //const m = [1,2,3];
    // alert( typeof m ); // object
    
    // [배열 객체 확인 방법]
    // [1]
    // alert( Array.isArray(m) ); // true
    // [2]
    // alert( m instanceof Array ); // true
    
  </script>
  
  <script>
  /*
   const fruits = [	"Banana"
	   				, "Orange"
	   				, "Apple"
	   				, "Mango"]; 
   	// 1. 배열의 크기 속성
   	let size = fruits.length;
   	// console.log(size); // 4
   	// 2. 배열 문자열로 반환 => 출력
   	// console.log( fruits.toString() );
   	// 3. 배열의 요소 얻어오기            at() ES2022
   	//console.log( fruits[2] + " / " + fruits.at(2) );
   	// 4. 배열의 조인(join(구분자)) ,콤마
   	//  Banana,Orange,Apple,Mango
    // $("#demo").html(fruits.join() );
   	$("#demo").html("<li>"
   			+ fruits.join("</li><li>")
   			+ "</li>");
   	// 5. 배열의 요소 추가
   	// fruits[ fruits.length ] = "PineApple";
   	fruits.push("PineApple")
   	document.write( fruits.toString() +"<br>");
   	// 6. pop() 배열의 마지막 요소를 제거하고
   	// 그 마지막요소를 얻어오는 함수
   	let el = fruits.pop();
   	// document.write( fruits.toString() +"<br>");
   	// document.write( el ); // PineApple
   	*/
  </script>
  
  <script>
  /*
    const m = ['a', 'b', 'c', 'd'];
    m.push("e"); // 맨 뒤에 새로운 요소 추가
    document.write(m.toString() + "<br>");
    m.pop();
    document.write(m.toString() + "<br>");
    // 7. shift() / unshift()
    // shift(): -1 왼쪽으로 이동
    //let el = m.shift();
    //document.write( el + "<br>");
    
    // unshift(): 배열의 앞에 요소를 추가하고 원래 요소들은 오른쪽으로 이동시킴
    let l = m.unshift("e", "f"); 
    document.write( l + "<br>");
    document.write(m.toString() + "<br>");
    
    // 배열의 1번째 요소를 제거
    // e,[undefined], a,b,c,d
    delete m[1];
    document.write(m.toString() + "<br>")
    
    // 요소 수정
    m[2] = 'x';
    document.write( m.toString() + "<br>")
    */
  </script>
  
  <script>
    const n = [1,2,3];
    const m = [4,5,6];
    const s = [7,8,9];
    
    // 8. 위의 두 배열을 병합  concat() 
    //const nm = [1,2,3,4,5,6]
    //const nm = n.concat(m);
    //n.concat(m).concat(s);
    n.concat(m, s);
    
    // document.write( nm.toString() + "<br>"); 
  </script>
  
  <script>
    // 9. copyWithin()
    const m = ["a", "b", "c", "d"];
    document.write( m.toString() + "<br>"); 
    
  </script>
  
</body>
</html>





