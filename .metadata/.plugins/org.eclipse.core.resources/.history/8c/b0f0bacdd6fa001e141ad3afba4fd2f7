<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Insert title here</title>
<link rel="shortcut icon" type="image/x-icon" href="http://localhost/webPro/images/SiSt.ico">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<link rel="stylesheet" href="http://localhost/webPro/resources/cdn-main/example.css">
<script src="http://localhost/webPro/resources/cdn-main/example.js"></script>
<style>
 span.material-symbols-outlined{
   vertical-align: text-bottom;
 }
</style>
</head>
<body>
<header>
  <h1 class="main"><a href="#" style="position: absolute;top:30px;">yeon HOme</a></h1>
  <ul>
    <li><a href="#">로그인</a></li>
    <li><a href="#">회원가입</a></li>
  </ul>
</header>
<div>
  <xmp class="code">
    [js 함수]
    1. function 함수명([매개변수...]){
      // 코딩
      
      [return 리턴값;]
    }
    2. 익명함수를 선언하고 변수로 저장.
    let 변수명 = function (){
    };
    변수명();
    
    3. Function 객체생성자 *** X
     const sum = new Function("a","b", "return a+b");
     alert( sum(1,2) );
    
    4. 현재 범위의 맨위로 변수, 함수 선언 부분을 이동
    : js 호이스팅
     (주의) 함수표현식을 사용하여 정의된 함수는
          호이스팅 되지 않는다.
     	 예) let hap = (a, b) => a+b;
     function test() {
       //
       //
     }
     
     test();
     
    5. 자체 호출 함수
     1) 함수 표현식
     2) 자기 자신 함수 호출
     
     예)
     function hi(){
     	return "hello world";
     }
     
     hi();
     hi();
     hi();
    
    
     let hi = function (){
		     	return "hello world";
		     }
     
     hi();
     hi();
     hi();
     
     
  </xmp>
</div>
</body>
</html>




